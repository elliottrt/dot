
- Basic
	- [x] basic object structure
	- [x] errors and results

- AST
	- [x] tree generation from text
	- [x] separate tokenizing/lexing and AST-gen
	- [x] error reporting
	- [x] arrays

- Code Evaluation
	- [x] declaration of variables -> `a.set.10` makes a=10, `a.b.set.20` makes a.b=20 (b is member of a)
	- [x] function calls
		- [x] function scope
		- [x] @ for self and $ for argument
	- [x] ability to initialize variables to null
	- [x] argument ($) at the top level should be argv

- Builtin functions, when possible, should be member functions of variables - will allow for polymorphism
	- [ ] input/output
	- [ ] equality
	- [ ] array operators 
		- [x] get element
			- note: set element is done with `array.get.index.set.value`
			- note: indexing can also be done with `array.<integer-literal>`
		- [x] push
		- [ ] pop
		- [ ] insert
		- [x] remove
		- [ ] length
		- note: other functions may be implemented using these
	- [ ] string operators
		- [ ] length
	- [x] general set method
	- [ ] figure out how editing already-set functions will work
	- [ ] static/anonymous functions - functions with no owner
	- [ ] math functions
		- [ ] trig functions - Math.Sin.x? Math.Cos.x?
		- [x] simple math functions
		- [ ] bitwise math functions
		- [ ] logical math functions
		- [ ] double type - how??? 10.0 would be interpreted as 10 applied to 0
	- [ ] control flow
		- [ ] if
		- [ ] while
		- [ ] repeat
	- [ ] delete function - delete a child of an object
		- note: would need to be something like `a.delete.(@.set)` where a.delete deletes a child of a
		- kind of difficult with current layout, requires parent and name of child
	- [ ] exists function? - check if variable exists

- Other
	- [ ] read-eval-print loop interactive prompt
	- [ ] do something about circular references with lists and objects
	- [ ] static typing/inferring - interfaces?
	- [ ] testing
	- [ ] ability to import/include files
		- when used, should return a variable containing all results in the file
		to do this, return the 'global null' used when reading the imported file
		and that will contain all variables/functions declared in that file
	- [ ] standard library
	- [ ] garbage collection of unused objects
	- [ ] reporting of multiple errors
	- [ ] simplify ast tree
		- [ ] simplify should identify constants		 ex: (10.add.5) -> 15
	- [ ] array elements separated by `.`?
